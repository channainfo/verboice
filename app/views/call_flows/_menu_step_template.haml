%script{type: "text/html", id: "menu_step_template"}
  .feditor-sidebar.right.box.w28.iblock.h65

    %div{ko(:if => "is_editing_resource()")}
      %div{ko(template: "{name: 'resource_editor_template', data: current_editing_resource}")}

    .tableheader
      %span.left.i48grad-dial{ ko(css: '{ "orange": is_invalid }') }
      %input.ux-text.w20.right{ ko(value: 'name', valueUpdate: '"afterkeydown"', css: '{ "error": is_name_invalid }')}

    .content.scroll
      %table.GralTable.TwoColumn.CleanTable.NoHead
        %tr
          %th= t('views.call_flows._menu_step_template.label.messages')
          %th
          %tr
            %td{ko(css: "{ orange: is_explanation_resource_invalid }")}
              = t('views.call_flows._menu_step_template.label.explanation')
              %span{ko(css: "{ alert: is_explanation_resource_invalid }")}
              %span{ko(text: "resource('explanation').display_name()")}
            %td
              %button.farrow{ :type => "button", 'data-bind' => 'click: show_explanation_resource' }
          %tr
            %td{ko(css: "{ orange: is_options_resource_invalid }")}
              = t('views.call_flows._menu_step_template.label.options')
              %span{ko(css: "{ alert: is_options_resource_invalid }")}
              %span{ko(text: "resource('options').display_name()")}
            %td
              %button.farrow{ :type => "button", 'data-bind' => 'click: show_options_resource' }
          %tr
            %td
              = t('views.call_flows._menu_step_template.label.invalid')
              %span{ko(text: "resource('invalid').display_name()")}
            %td
              %button.farrow{ :type => "button", 'data-bind' => "click: show_invalid_resource" }
      %div{ko('instedd_init' => true)}
        %hr
        %label= t('views.call_flows._menu_step_template.label.attempts')
        %br
        .ux-nstep.w06
          %input{ko(value: "timeout"),:type => 'number'}
        = t('views.call_flows._menu_step_template.label.seconds_before_repeat_options')
        %br
        .ux-nstep.w06
          %input{ko(value: "number_of_attempts"),:type => 'number'}
        = t('views.call_flows._menu_step_template.label.attempts').downcase
        %br
        %br
        = t('views.call_flows._menu_step_template.label.after_final_attempt_fails')
        %select.w10{'data-bind' => 'options: commands(), optionsText: function(item) { return (new window[item]({})).default_name() }, value: default_command_selected, event: { change: change_default_option }'}
        %hr
        %label{ko(css: "{ orange: are_options_invalid }")}
          = t('views.call_flows._menu_step_template.label.options')
          %span{ko(css: "{ alert: are_options_invalid }")}
        %br
        %ul.oplist
          %span{ 'data-bind' => 'foreach: options' }
            %li
              %select{ko(options: 'available_numbers', value: 'number')}
              %span.ux-oplist{ko(text: "next_name()", click: 'select_step')}
              %button.clist-remove{ 'data-bind' => 'click: $parent.remove_option_with_confirm' }
          %li
            %span.ux-text
              = t('views.call_flows._menu_step_template.action.add_an_option')
              %select.w10{ko(options: 'commands()', optionsText: "function(item) { return (new window[item]({})).default_name() }", value: 'new_option_command')}
            %button.clist-add{ 'data-bind' => 'click: add_option'}
        %hr
        = store_value_tags_without_checkbox
        / = store_value_tags
        %br
    .bottom-actions
      %button.fdelete{ 'data-bind' => 'click: remove_with_confirm' }= t('views.call_flows._menu_step_template.action.remove_this_step')
