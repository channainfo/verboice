%script{type: "text/html", id: "register_step_template"}
  .feditor-sidebar.right.box.w28.iblock.h65

    %div{ko(:if => "is_editing_resource()")}
      %div{ko(template: "{name: 'resource_editor_template', data: current_editing_resource}")}

    .tableheader
      %span.left.i48grad-register{ ko(css: '{ "orange": is_invalid }') }
      %input.ux-text.w20.right{ ko(value: 'name', valueUpdate: '"afterkeydown"', css: '{ "error": is_name_invalid }')}

    %table.GralTable.TwoColumn.CleanTable.NoHead
      %tr
        %th= t('views.call_flows._register_step_template.label.messages')
        %th
      %tr
        %td{ko(css: "{ orange: is_confirmation_resource_invalid }")}
          = t('views.call_flows._register_step_template.label.confirmation')
          %span{ko(css: "{ alert: is_confirmation_resource_invalid }")}
          %span{ko(text: "resource('confirmation').display_name()")}
        %td
          %button.farrow{:type => "button", 'data-bind' => 'click: show_confirmation_resource'}

    .content.reminder_group
      %hr
      %div{style: "padding-bottom:10px;"}
        %label= t('views.call_flows._register_step_template.label.reminder_group') + ":"
      %div{ko(:template => "{name: 'register_option_template', data: option}")}

      %div
        .w10
          %label{ko(css: {orange: :is_reminder_group_invalid})}=t('views.call_flows._register_step_template.label.to') + ":"
          %span{ko(css:{ alert: :is_reminder_group_invalid })}
        %div
          %select{ko(css: {error: :is_reminder_group_invalid}, options: 'reminder_groups', value: 'reminder_group', optionsCaption: "'#{t('views.call_flows._register_step_template.label.select')}'")}
        .clear
      %br/

      %hr
      %div
        %label= t('views.call_flows._register_step_template.label.store_registered_date') + ":"
        %input.ux-text{ ko( value: 'store', initAutocomplete: {source: 'workflow.all_variables()'}, initMask: {mask: '$.mask.masks.token'}, valueUpdate: 'afterkeydown')}
      %br/

    .bottom-actions
      %button.fdelete{ 'data-bind' => 'click: remove_with_confirm' }= t('views.call_flows._register_step_template.action.remove_this_step')
