:javascript
  $(function(){
    allowKeyInput($(".new_address"), /[0-9\+]/);
  });

= form_for [@project, @contact] do |f|
  - if @contact.errors.any?
    #error_explanation
      %h2= t('views.contacts._form.errors.prohibited', :count => @contact.errors.count)
      %ul
        - @contact.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :address, t('views.contacts._form.label.phone_number')
    %ul.addresses.clist.w30
      - @contact.addresses.each do |caddr|
        = render partial: 'address', locals: { f: f, caddr: caddr, child_index: nil }
      - if params[:action] != 'edit'  
        %li
          %input.ux-text.new_address
          %button.clist-add{ :type => "button", :'data-template' => render(partial: 'address', locals: { f: f, caddr: ContactAddress.new, child_index: '__INDEX__' }) }

  %div
    = f.fields_for :persisted_variables do |builder|
      .fields
        .field
          = builder.label :value, builder.object.project_variable.try(:name) || builder.object.implicit_key
          = builder.text_field :value, :class => "w30 edit_variable #{builder.object.implicit_key}"
          - if builder.object.implicit_key.present?
            = builder.hidden_field :implicit_key, :value => builder.object.implicit_key
          - else
            = builder.hidden_field :project_variable_id, :value => builder.object.project_variable.try(:id)

  - if @recorded_audios.present?
    %br/
    %hr/
    %br/
    - @recorded_audios.group_by(&:description).each do |description, audios|
      .field
        = f.label description
        - audios.each do |recorded_audio|
          = recorded_audio.created_at
          = link_to '', result_call_log_path(recorded_audio.call_log, {:key => recorded_audio.key}), :class => 'button fimport'


  %hr/

  %button.white{:type =>'submit'}= t('views.contacts._form.action.save')
  = link_to t('views.contacts._form.action.cancel'), project_contacts_path(@project), :class => 'button white cancel'
