- content_for :head do
  :javascript
    $(function() { initProjectSettings(#{@project.default_language.to_json}, #{@project.languages.to_json}, #{@project.synthesizer.voices.to_json}); });

= form_for(@project, :builder => InsteddFormBuilder) do |f|
  - if @project.errors.any?
    #error_explanation
      %h2
        = t('views.projects._form.errors.prohibited', :count => @project.errors.count)
      %ul
        - @project.errors.full_messages.each do |msg|
          %li= msg

  %br

  %h1= t('views.projects._form.label.properties')

  = f.text_field :name, :label => t('views.projects._form.label.name')
  = f.time_zone_select :time_zone, ActiveSupport::TimeZone.all, :label => t('views.projects._form.label.time_zone')
  = f.check_box :store_call_log_entries, :label => t('views.projects._form.label.store_call_log_details')

  %hr

  %br
  %br

  %h1= t('views.projects._form.label.languages')

  = f.label :default_language, "#{t('views.projects._form.label.default_language')}"
  %br
  %select.w30{ko(value: 'defaultLanguage', options: 'languages', optionsText: "'label'", optionsValue: "'value'"), name: 'project[default_language]'}

  %br
  %br
  = f.select :tts_engine, options_for_select([['Built in', 'built-in'], ['iSpeech', 'ispeech']], @project.tts_engine), label: 'Text-to-speech Engine'
  = f.text_field :tts_ispeech_api_key, label: 'iSpeech API key'

  = f.label :languages, t('views.projects._form.label.supported_languages')
  %br

  %ul.clist.w30
    /ko foreach: languages
    %li
      %input{ko(value: 'value'), type: 'hidden', name: 'project[languages][][language]'}
      %span.w15{ko(text: 'description')}
      %select.w15{ko(value: 'voice', options: 'voices()', optionsText: "'description'", optionsValue: "'id'"), name: 'project[languages][][voice]'}
      %button.clist-remove{ko(click: '$root.removeLanguage')}
    //ko
    %li
      %input#add_language.ux-type{ko(value: 'newLanguage', valueUpdate: 'afterkeydown', event: {keydown: 'keydown'}), type: 'text', placeholder: "#{t('views.projects._form.label.add_new_language')}"}
      %button#add_language_button.clist-add{ko(click: 'addLanguage')}

  %br

  %hr

  %br
  %br

  %h1= t('views.projects._form.label.status_callback')

  = f.text_field :status_callback_url, :label => t('views.projects._form.label.url')
  = f.text_field :status_callback_url_user, :label => t('views.projects._form.label.user'), :autocomplete => 'off'
  = f.password_field :status_callback_url_password, :label => t('views.projects._form.label.password'), :autocomplete => 'off'

  %hr

  - if @project.new_record?
    %button.white{:type => "submit"}= t('views.projects._form.action.save')
    = link_to t('views.projects._form.action.cancel'), projects_path, :class => "button white cancel", :style => 'top: 1px;'
  - else
    %button.white{:type => "submit"}= t('views.projects._form.action.update')
    = link_to t('views.projects._form.action.cancel'), project_path(@project), :class => "button white cancel", :style => 'top: 1px;'
