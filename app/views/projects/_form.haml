- content_for :head do
  :javascript
    $(function() { initProjectSettings(#{@project.default_language.to_json}, #{@project.languages.to_json}, #{@project.synthesizer.voices.to_json}); });

= form_for(@project, :builder => InsteddFormBuilder) do |f|
  - if @project.errors.any?
    #error_explanation
      %h2
        = pluralize(@project.errors.count, "error")
        prohibited this project from being saved:
      %ul
        - @project.errors.full_messages.each do |msg|
          %li= msg

  %br

  %h1 Properties

  = f.text_field :name
  = f.time_zone_select :time_zone, ActiveSupport::TimeZone.all

  %hr

  %br
  %br

  %h1 Languages

  = f.label :default_language
  %br
  %select.w30{ko(value: 'defaultLanguage', options: 'languages', optionsText: "'label'", optionsValue: "'value'"), name: 'project[default_language]'}

  %br
  %br
  = f.select :tts_engine, options_for_select([['Built in', 'built-in'], ['iSpeech', 'ispeech']], @project.tts_engine), label: 'Text-to-speech Engine'
  = f.text_field :tts_ispeech_api_key, label: 'iSpeech API key'

  = f.label :languages, "Languages you will support in this project"
  %br

  %ul.clist.w30
    /ko foreach: languages
    %li
      %input{ko(value: 'value'), type: 'hidden', name: 'project[languages][][language]'}
      %span.w15{ko(text: 'description')}
      %select.w15{ko(value: 'voice', options: 'voices()', optionsText: "'description'", optionsValue: "'id'"), name: 'project[languages][][voice]'}
      %button.clist-remove{ko(click: '$root.removeLanguage')}
    //ko
    %li
      %input#add_language.ux-type{ko(value: 'newLanguage', valueUpdate: 'afterkeydown', event: {keydown: 'keydown'}), type: 'text', placeholder: 'Add a new language'}
      %button#add_language_button.clist-add{ko(click: 'addLanguage')}

  %br

  %hr

  %br
  %br

  %h1 Status callback

  = f.text_field :status_callback_url, :label => 'URL'
  = f.text_field :status_callback_url_user, :label => 'User', :autocomplete => 'off'
  = f.password_field :status_callback_url_password, :label => 'Password', :autocomplete => 'off'

  %hr

  - if @project.new_record?
    %button.grey{:type => "submit"} Save
    = link_to "Cancel", projects_path, :class => "button white cancel", :style => 'top: 1px;'
  - else
    %button.grey{:type => "submit"} Update
    = link_to "Cancel", project_path(@project), :class => "button white cancel", :style => 'top: 1px;'
