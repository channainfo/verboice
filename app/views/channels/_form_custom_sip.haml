.field
  = f.label :username
  = f.text_field :username, :autocomplete => 'off'
.field
  = f.label :password
  = f.password_field :password, :value => @channel.config['password'], :autocomplete => 'off'
.field
  = f.label :limit
  = f.text_field :limit
%hr/
%h2 Servers
%table#servers.table
  %tr
    %th Host
    %th Register?
    %th Direction
    %th
  - @channel.servers.each do |server|
    %tr{:align => "center"}
      %td= text_field_tag "channel[host][]", server.host
      %td
        = hidden_field_tag "channel[register][]", server.register
        <input class="register_dummy" type="checkbox" #{server.register? ? 'checked="checked"' : ''}/>
      %td= select_tag "channel[direction][]", options_for_select(['inbound', 'outbound', 'both'], server.direction)
      %td= link_to_function 'Remove this server', 'remove_server(this)'
  %tr{:align => "center"}
    %td{:colspan => "4"}= link_to_function 'Add another server...', 'add_server()'

:javascript
  function add_server() {
    $servers = $('#servers');
    $trs = $('#servers tr');
    $tr = $($trs[$trs.length - 2]).clone();
    $tr.insertBefore($trs[$trs.length - 1]);
  }

  function remove_server(elem) {
    $servers = $('#servers');
    $trs = $('#servers tr');
    if ($trs.length == 3) return;

    $tr = $(elem).parents('tr');
    $tr.remove();
  }

  $(function() {
    $('.register_dummy').live('change', function() {
      $this = $(this);
      $hidden = $($this.prev());
      $hidden.val($this.is(':checked') ? '1' : '0');
    });
  });