csv << [t('views.call_logs.download_csv.label.call_id'), t('views.call_logs.download_csv.label.phone_number'), t('views.call_logs.download_csv.label.time'), t('views.call_logs.download_csv.label.severity'), t('views.call_logs.download_csv.label.step_name'), t('views.call_logs.download_csv.label.step_id'), t('views.call_logs.download_csv.label.command'), t('views.call_logs.download_csv.label.action'), t('views.call_logs.download_csv.label.detail')]
@entries = CallLogEntry.joins(:call).joins('LEFT JOIN projects on call_logs.project_id = projects.id')
@entries = @entries.where('call_logs.account_id = ?', current_account.id).where('severity <> "trace"').order('call_logs.id DESC, call_log_entries.id')
@entries = @entries.search params[:search], :account => current_account if params[:search].present?
@entries = @entries.select('call_log_entries.created_at, severity, details, call_logs.id as call_id, call_logs.address as call_address, projects.time_zone')

@entries = ActiveRecord::Base.connection.execute(@entries.to_sql)

@entries.each do |entry|
  details = SerializableHash.load(entry[2]) || {}
  csv << [entry[3], entry[4], datetime_format(entry[0], entry[5]), entry[1], details[:step_name], details[:step_id], details[:command], details[:action], details[:description]]
end