- content_for :head do
  :javascript
    var distinct_variables = #{ @variables.to_json };
    var application_flow = #{ raw @application.user_flow.to_json };
    var update_workflow_application_path = "#{ update_workflow_application_path(@application) }";
    var application_path = "#{ application_path(@application) }";
    var save_recording_application_path = "#{ save_recording_application_path(@application)}";
    var play_recording_application_path = "#{ play_recording_application_path(@application)}";
    var menu_default_time_out_in_seconds = #{Parsers::UserFlowNode::Menu.default_time_out_in_seconds};
    var menu_default_number_of_attempts = #{Parsers::UserFlowNode::Menu.default_number_of_attempts};

  - %W(hang_up_step workflow_step capture_step menu_step play_step transfer_step goto_step branch_step record_step message recording_message text_message command_selector branch_option).each do |template|
    = render "applications/workflow/#{template}_template"

= render 'tabs'

#wami

#workflow-page
  %p.left.title.clickable{ 'data-bind' => 'click: show_new_step_selector' } Add new step
  = form_tag update_workflow_application_path, :method => "PUT", :'data-bind' => "submit: serialize_workflow" do
    %div.right
      = hidden_field_tag 'flow'
      %button.grey{:type => "submit"} Save
      = link_to 'Cancel', application_path(@application), :class => "button white cancel", :style => 'top: 1px; margin-right: 15px'
  .clear

  .left
    .box.lightgrey.workflow#workflow
      .workflow-content-container.h65{ ko(workflow_steps: 'steps') }

  %span{ko(template: '{name: display_template_for, data: sidebar_content}')}

  .clear
